{"version":3,"sources":["abstracts/helpers.scss","base/reset.scss","abstracts/mixins.scss","abstracts/variables.scss","base/typography.scss","base/forms.scss","layout/body.scss","layout/header.scss","../../node_modules/include-media/dist/_include-media.scss","layout/about.scss","layout/portfolio.scss","layout/footer.scss"],"names":[],"mappings":"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","file":"style.min.css","sourcesContent":["// This is the most used helpers.\r\n//\r\n// You can remove or add your own helpers in this file.\r\n\r\n%listreset {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n}\r\n\r\n// clearfix\r\n%clearfix {\r\n &:after {\r\n    content: '';\r\n    display: block;\r\n    clear: both;\r\n  }\r\n}\r\n\r\n.clearfix {\r\n  @extend %clearfix;\r\n}\r\n\r\n// Only display content to screen readers\r\n//\r\n// See: http://a11yproject.com/posts/how-to-hide-content/\r\n\r\n.sr-only {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  margin: -1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0,0,0,0);\r\n  border: 0;\r\n}\r\n\r\n// Use in conjunction with .sr-only to only display content when it's focused.\r\n// Useful for \"Skip to main content\" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1\r\n// Credit: HTML5 Boilerplate\r\n\r\n.sr-only-focusable {\r\n  &:active,\r\n  &:focus {\r\n    position: static;\r\n    width: auto;\r\n    height: auto;\r\n    margin: 0;\r\n    overflow: visible;\r\n    clip: auto;\r\n  }\r\n}\r\n\r\n/// * Helper class to truncate and add ellipsis to a string too long for it to fit\r\n/// * on a single line.\r\n/// * 1. Prevent content from wrapping, forcing it on a single line.\r\n/// * 2. Add ellipsis at the end of the line.\r\n\r\n.ellipsis {\r\n  white-space: nowrap; // 1\r\n  text-overflow: ellipsis; // 2 \r\n  overflow: hidden;\r\n}\r\n\r\n","// This is base reset for global components.\r\n//\r\n// Note: If you use a framework that includes base styling then you need to remove this file.\r\n\r\nhtml {\r\n\tbox-sizing: border-box;\r\n}\r\n*, *:before, *:after {\r\n\tbox-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  @include font-smoothing(on);\r\n  color: map-get($base, 'base-text-color');\r\n  background: map-get($base, 'base-background-color');\r\n  font: #{map-get($base, 'base-font-size')}/#{map-get($base, 'base-line-height')} #{map-get($base, 'base-font-family')};\r\n  min-width: map-get($base, base-min-width);\r\n}\r\n\r\n// adaptive images\r\nimg {\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n// google map fix\r\n.gm-style img {max-width: none;}\r\n\r\n// hide tel links on desktop\r\n@media only screen and (min-width: 1025px) {\r\n    a[href^=\"tel\"], a[href^=\"skype\"], a[href^=\"sms\"] {\r\n    cursor: default;\r\n    pointer-events: none;\r\n  }\r\n}\r\nul{\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  li{\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n}\r\n\r\na{\r\n  text-decoration: none;;\r\n}\r\n\r\nspan{\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\nh1, h2, h3, h4, a, p{\r\n  padding: 0;\r\n  margin: 0;\r\n}","// Most used mixins.\r\n//\r\n// Note: If you use a framework (bootstrap, zurb etc.) that includes mixins you can import them too or remove this file.\r\n\r\n\r\n\r\n// vertical align el inside parent with fixed height/min-height\r\n// usage \r\n// html - .parent>.child\r\n// scss - @include v-align;\r\n//     or @include v-align(250px);\r\n//     or @include v-align(250px, bottom, before);\r\n//\r\n@mixin v-align($va-height: 100%, $va-direction: middle, $va-pseudo: after) {\r\n  white-space: nowrap;\r\n  text-align: center;\r\n\r\n  &:#{$va-pseudo} {\r\n    content: '';\r\n    display: inline-block;\r\n    vertical-align: $va-direction;\r\n    width: 0;\r\n    min-height: $va-height;\r\n  }\r\n\r\n  > * {\r\n    white-space: normal;\r\n    display: inline-block;\r\n    vertical-align: $va-direction;\r\n    max-width: 99%;\r\n  }\r\n}\r\n\r\n// vertical align a pair of child el inside parent\r\n// usage \r\n// html - .post>.image+.text\r\n// scss - @include v-align-pair(image, text);\r\n//     or @include v-align-pair(image, text, bottom);\r\n//     or @include v-align-pair(image, text, middle, 200px);\r\n//\r\n@mixin v-align-pair($child-name1, $child-name2, $valign: middle, $width1: auto, $width2: auto ) {\r\n  display: table;\r\n  .#{$child-name1}{\r\n    display: table-cell;\r\n    vertical-align: $valign;\r\n    width: $width1; \r\n  }\r\n  .#{$child-name2} {\r\n    display: table-cell;\r\n    vertical-align: $valign;\r\n    width: $width2;\r\n  }\r\n}\r\n\r\n\r\n// vertical align el\r\n// usage: @include vertical-align-el;\r\n//\r\n@mixin vertical-align-el {\r\n  position: relative;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n/// Mixin helping defining both `width` and `height` simultaneously.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @access public\r\n///\r\n/// @param {Length} $width - Element’s `width`\r\n/// @param {Length} $height ($width) - Element’s `height`\r\n///\r\n/// @example scss - Usage\r\n///   .foo {\r\n///     @include size(10em);\r\n///   }\r\n///\r\n///   .bar {\r\n///     @include size(100%, 10em);\r\n///   }\r\n///\r\n/// @example css - CSS output\r\n///   .foo {\r\n///     width: 10em;\r\n///     height: 10em;\r\n///   }\r\n///\r\n///   .bar {\r\n///     width: 100%;\r\n///     height: 10em;\r\n///   }\r\n///\r\n@mixin size($width, $height: $width) {\r\n  width: $width;\r\n  height: $height;\r\n}\r\n\r\n/// font-smothing\r\n/// @include font-smoothing(on);\r\n/// @include font-smoothing(off);\r\n@mixin font-smoothing($value: on){\r\n  @if $value == on{\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  @else{\r\n    -webkit-font-smoothing: subpixel-antialiased;\r\n    -moz-osx-font-smoothing: auto;\r\n  }\r\n}\r\n\r\n\r\n/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\r\n///\r\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include hide-text;\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element {\r\n///     overflow: hidden;\r\n///     text-indent: 101%;\r\n///     white-space: nowrap;\r\n///   }\r\n///\r\n@mixin hide-text {\r\n  overflow: hidden;\r\n  text-indent: 101%;\r\n  white-space: nowrap;\r\n}\r\n\r\n\r\n/// Creates a visual triangle. \r\n/// Mixin takes ($size, $color, $direction)\r\n/// The $size argument can take one or two values—width height.\r\n/// The $color argument can take one or two \r\n/// values—foreground-color background-color.\r\n/// \r\n/// @author http://bourbon.io/docs/#triangle\r\n///\r\n/// $direction: \r\n/// up, down, left, right, up-right, up-left, down-right, down-left\r\n/// @example scss - Usage\r\n///   @include triangle(12px, gray, down);\r\n///   @include triangle(12px 6px, gray blue, up-left);\r\n///\r\n@mixin triangle($size, $color, $direction) {\r\n  $width: nth($size, 1);\r\n  $height: nth($size, length($size));\r\n  $foreground-color: nth($color, 1);\r\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\r\n  height: 0;\r\n  width: 0;\r\n\r\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\r\n    $width: $width / 2;\r\n    $height: if(length($size) > 1, $height, $height/2);\r\n\r\n    @if $direction == up {\r\n      border-bottom: $height solid $foreground-color;\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n    } @else if $direction == right {\r\n      border-bottom: $width solid $background-color;\r\n      border-left: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    } @else if $direction == down {\r\n      border-left: $width solid $background-color;\r\n      border-right: $width solid $background-color;\r\n      border-top: $height solid $foreground-color;\r\n    } @else if $direction == left {\r\n      border-bottom: $width solid $background-color;\r\n      border-right: $height solid $foreground-color;\r\n      border-top: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == up-right) or ($direction == up-left) {\r\n    border-top: $height solid $foreground-color;\r\n\r\n    @if $direction == up-right {\r\n      border-left: $width solid $background-color;\r\n    } @else if $direction == up-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == down-right) or ($direction == down-left) {\r\n    border-bottom: $height solid $foreground-color;\r\n\r\n    @if $direction == down-right {\r\n      border-left: $width solid $background-color;\r\n    } @else if $direction == down-left {\r\n      border-right: $width solid $background-color;\r\n    }\r\n  } @else if ($direction == inset-up) {\r\n    border-color: $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-down) {\r\n    border-color: $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $height $width;\r\n  } @else if ($direction == inset-right) {\r\n    border-color: $background-color $background-color $background-color $foreground-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  } @else if ($direction == inset-left) {\r\n    border-color: $background-color $foreground-color $background-color $background-color;\r\n    border-style: solid;\r\n    border-width: $width $height;\r\n  }\r\n}\r\n\r\n\r\n/// Animate css properties\r\n// usage \r\n// scss - @include animate(color);\r\n//     or @include animate(color width);\r\n//     or @include animate(color width, 1s, linear);\r\n//\r\n$animation-speed: 0.3s !default;\r\n\r\n@mixin animate($properties, $duration: $animation-speed, $easing: ease-in-out) {\r\n  $list:();\r\n  @each $prop in $properties {\r\n    $str: #{$prop} #{$duration} #{$easing};\r\n    $list: append($list, $str, comma);\r\n  }\r\n  transition: $list;\r\n}\r\n\r\n\r\n/// Mixin for styling form-placeholders\r\n/// @example scss - Usage\r\n///   @include placeholder {\r\n///    color: #333;\r\n///   }\r\n///\r\n///   input[type='text'],\r\n///   input[type='tel'],\r\n///   input[type='email'] {\r\n///     @include placeholder {\r\n///      color: red;\r\n///     }\r\n///   }\r\n\r\n@mixin placeholder {\r\n  &::-webkit-input-placeholder {@content;}\r\n  &::-moz-placeholder {opacity: 1; @content;}\r\n  &:-moz-placeholder {@content;}\r\n  &:-ms-input-placeholder {@content;}\r\n  &.placeholder {@content;}\r\n}\r\n\r\n/// Font-size px to rem calc\r\n/// @example scss - Usage\r\n/// selector {\r\n///    @include rem-font-size(16px);\r\n/// }\r\n\r\n@mixin rem-font-size($pxSize) {\r\n  font-size: $pxSize;\r\n  font-size: ($pxSize / 10px) + rem;\r\n}","// Global variables\r\n//\r\n// Base font styles for headings and links.\r\n\r\n// For headers\r\n$headings: (\r\n  'sizes': (\r\n    'h1-font-size': 30px,\r\n    'h2-font-size': 27px,\r\n    'h3-font-size': 24px,\r\n    'h4-font-size': 21px,\r\n    'h5-font-size': 17px,\r\n    'h6-font-size': 15px\r\n  ),\r\n  'fonts': (\r\n    'headings-font-family': inherit,\r\n    'headings-color': inherit\r\n  )\r\n);\r\n\r\n// Global vars for body typography\r\n$base: (\r\n  'base-font-sans-serif': unquote(\"Arial, 'Helvetica Neue', Helvetica, sans-serif\"),\r\n  'base-font-serif': unquote(\"'Times New Roman', Times, Baskerville, Georgia, serif\"),\r\n  'base-text-color': #000,\r\n  'base-background-color': #fff,\r\n  'base-link-color':#39f,\r\n  'base-font-size': 16px,\r\n  'base-line-height': 1.2,\r\n  'base-font-family': unquote(\"Arial, 'Helvetica Neue', Helvetica, sans-serif\"),\r\n  'vertical-rhythm': '(map-get($base, base-line-height) * 1em)',\r\n  'base-min-width': 320px\r\n);\r\n\r\n// Vars for forms\r\n$forms: (\r\n  'form-font-family': unquote(\"Arial, 'Helvetica Neue', Helvetica, sans-serif\"),\r\n  'form-element-padding': unquote(\"0.4em 0.7em\"),\r\n  'form-element-border-color': #999,\r\n  'form-element-focus-border-color': #000,\r\n  'placeholder-color': #999\r\n);\r\n\r\n// Breakpoints for include media mixin\r\n$breakpoints: (\r\n  'phone': 480px,\r\n  'tablet': 768px,\r\n  'desktop': 980px,\r\n  'widescreen': 1200px\r\n);\r\n\r\n// Keywords for include media mixin\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': '(-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi)',\r\n  'retina3x': '(-webkit-min-device-pixel-ratio: 2.5), (min-resolution: 240dpi)'\r\n);","// Typography\r\n//\r\n// Base font styles for headings and links.\r\n\r\nh1, .h1,\r\nh2, .h2,\r\nh3, .h3,\r\nh4, .h4,\r\nh5, .h5,\r\nh6, .h6,\r\n.h {\r\n  font-family: map-deep-get($headings, 'fonts', 'headings-font-family');\r\n  font-weight: bold;\r\n  margin: 0 0 0.5em;\r\n  color: map-deep-get($headings, 'fonts', 'headings-color');\r\n}\r\n\r\nh1, .h1 {\r\n  font-size: map-deep-get($headings, 'sizes', 'h1-font-size');\r\n}\r\n\r\nh2, .h2 {\r\n  font-size: map-deep-get($headings, 'sizes', 'h2-font-size');\r\n}\r\n\r\nh3, .h3 {\r\n  font-size: map-deep-get($headings, 'sizes', 'h3-font-size');\r\n}\r\n\r\nh4, .h4 {\r\n  font-size: map-deep-get($headings, 'sizes', 'h4-font-size');\r\n}\r\n\r\nh5, .h5 {\r\n  font-size: map-deep-get($headings, 'sizes', 'h5-font-size');\r\n}\r\n\r\nh6, .h6 {\r\n  font-size: map-deep-get($headings, 'sizes', 'h6-font-size');\r\n}\r\n\r\np {\r\n  margin: 0 0 1em;\r\n}\r\n\r\na {\r\n  color: map-get($base, 'base-link-color');\r\n  &:hover,\r\n  &:focus {\r\n    text-decoration: none;\r\n  }\r\n}","// This is base reset for form elements.\r\n//\r\n// Note: If you use a framework that includes form styling then you need to remove this file.\r\n\r\nform,\r\nfieldset {\r\n  margin: 0;\r\n  padding: 0;\r\n  border-style: none;\r\n}\r\n\r\ninput[type='text'],\r\ninput[type='tel'],\r\ninput[type='email'],\r\ninput[type='search'],\r\ninput[type='password'],\r\ntextarea {\r\n  -webkit-appearance: none;\r\n  -webkit-border-radius: 0;\r\n  box-sizing: border-box;\r\n  border: 1px solid map-get($forms, 'form-element-border-color');\r\n  padding: map-get($forms, 'form-element-padding');\r\n  font-family: map-get($forms, 'form-font-family');\r\n\r\n  &:focus {\r\n    border-color: map-get($forms, 'form-element-focus-border-color');\r\n  }\r\n\r\n  @include placeholder {\r\n    color: map-get($forms, 'placeholder-color');\r\n  }\r\n}\r\n\r\nselect {\r\n  -webkit-border-radius: 0;\r\n}\r\n\r\ntextarea {\r\n  resize: vertical;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton,\r\ninput[type='button'],\r\ninput[type='reset'],\r\ninput[type='file'],\r\ninput[type='submit'] {\r\n  -webkit-appearance: none;\r\n  -webkit-border-radius: 0;\r\n  cursor: pointer;\r\n}","html, body{\r\n    min-height: 100vh;\r\n    margin: 0;\r\n}\r\nbody{\r\n    font: 15px \"Roboto\";\r\n    display: flex;\r\n    flex-direction: column;\r\n}",".wrapper-header-main {\r\n    position: relative;\r\n    background-image: url(/src/images/header-bg.png);\r\n    background-size: cover;\r\n    padding: 22px 0 135px 0;\r\n    @include media (\"<phone\") {\r\n        padding: 22px 0 25px;\r\n    }\r\n    &:after {\r\n        position: absolute;\r\n        height: 100%;\r\n        width: 100%;\r\n        content: '';\r\n        top: 0;\r\n        left: 0;\r\n        background-color: #d9d9d9;\r\n        opacity: 0.35;\r\n        z-index: -1;\r\n    }\r\n}\r\n\r\n.header {\r\n    max-width: 1140px;\r\n    padding: 0 15px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    &-menu {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        padding: 0 0 160px;\r\n        @include media(\"<phone\") {\r\n            padding: 0 0 60px;\r\n        }\r\n        .fas {\r\n            color: #3e3e3e;\r\n            max-width: 15px;\r\n        }\r\n        .logo {\r\n            z-index: 2;\r\n            @include animate(opacity);\r\n            &:hover {\r\n                opacity: 0.6;\r\n            }\r\n        }\r\n        .header-nav {\r\n            display: flex;\r\n            flex-direction: row;\r\n            align-items: center;\r\n            .navbar {\r\n                display: flex;\r\n                display: none;\r\n                flex-direction: row;\r\n                flex-wrap: nowrap;\r\n                ul {\r\n                    display: flex;\r\n                    flex-direction: row;\r\n                    li {\r\n                        margin: 0 30px 0 0;\r\n                        a {\r\n                            @include animate(color);\r\n                            @include animate(background-color);\r\n                            font: bold 17px \"Roboto\";\r\n                            padding: 10px 20px;\r\n                            border-radius: 10px;\r\n                            color: #3e3e3e;\r\n                        }\r\n                        &:hover {\r\n                            a {\r\n                                color: #d3d3d3;\r\n                                background-color: #3e3e3e;\r\n                            }\r\n                        }\r\n                    }\r\n                    @include media(\"<desktop\") {\r\n                        flex-direction: column;\r\n                        position: absolute;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                        background-color: #d3d3d3;\r\n                        top: 0;\r\n                        left: 0;\r\n                        width: 100vw;\r\n                        height: 100vh;\r\n                        li {\r\n                            width: 100%;\r\n                            margin: 30px 0 0;\r\n                            text-align: center;\r\n                            a {\r\n                                display: block;\r\n                                padding: 10px 0;\r\n                                &:hover {\r\n                                    color: #3e3e3e;\r\n                                    background-color: transparent;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            .menu {\r\n                cursor: pointer;\r\n                @include animate(opacity);\r\n                &:hover {\r\n                    opacity: 0.6;\r\n                }\r\n                .fa-bars {\r\n                    position: absolute;\r\n                }\r\n                .fa-minus-circle {\r\n                    display: none;\r\n                }\r\n                .fa-plus-circle,\r\n                .fa-minus-circle {\r\n                    position: relative;\r\n                    background-color: #fff;\r\n                    border-radius: 50px;\r\n                    top: 17px;\r\n                    left: 6px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    flex-wrap: wrap;\r\n    z-index: 1;\r\n    padding: 15px;\r\n    &-title {\r\n        font: bold 40px \"Arvo\";\r\n        color: #3e3e3e;\r\n        margin: 0;\r\n        letter-spacing: 1px;\r\n        text-align: center;\r\n    }\r\n    &-slogan {\r\n        font: 35px \"Arvo\";\r\n        color: #3e3e3e;\r\n        margin: 0 0 25px;\r\n    }\r\n    P {\r\n        font: 15px \"Poppins\";\r\n        color: #3e3e3e;\r\n        max-width: 538px;\r\n        text-align: center;\r\n        margin: 0 0 45px;\r\n        @include media(\"<phone\") {\r\n            margin: 0;\r\n        }\r\n    }\r\n    .buttons {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        @include media(\"<phone\") {\r\n            flex-direction: column;\r\n        }\r\n        a {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            font: 18px \"Arvo\";\r\n            color: #dadada;\r\n            width: 160px;\r\n            height: 49px;\r\n            border-radius: 10px;\r\n            background-color: #3e3e3e;\r\n            margin: 0 15px;\r\n            @include animate(opacity);\r\n            @include media(\"<phone\") {\r\n                margin: 25px 0 0;\r\n                align-self: center;\r\n            }\r\n            &:hover {\r\n                opacity: 0.8;\r\n            }\r\n        }\r\n    }\r\n}","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n",".about-wrapper {\r\n    background-color: #e9e9e9;\r\n}\r\n\r\n.about {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    max-width: 1140px;\r\n    width: 100%;\r\n    padding: 120px 15px 70px;\r\n    margin: 0 auto;\r\n    @include media (\"<1100px\") {\r\n        padding: 25px 15px;\r\n        flex-direction: column;\r\n    }\r\n    &-text {\r\n        max-width: 570px;\r\n        width: 100%;\r\n        padding: 45px 65px;\r\n        border-radius: 10px;\r\n        box-shadow: 2px 3.464px 18px rgba(1, 1, 1, 0.14);\r\n        color: #3e3e3e;\r\n        margin: 0 auto;\r\n        @include media (\"<1100px\") {\r\n            margin: 0 auto 25px;\r\n        }\r\n        @include media (\"<desktop\") {\r\n            padding: 15px;\r\n        }\r\n        &-scaled {\r\n            font: bold 30px \"Arvo\";\r\n            letter-spacing: 1px;\r\n        }\r\n    }\r\n    &-slider {\r\n        font: 15px \"Poppins\";\r\n        color: #3e3e3e;\r\n        &-header {\r\n            font: 800 20px \"Arvo\";\r\n            letter-spacing: 1px;\r\n            margin: 0 0 25px;\r\n        }\r\n    }\r\n    .slider-holder {\r\n        max-width: 480px;\r\n        width: 100%;\r\n        margin: 0 auto;\r\n        .slick {\r\n            .fa-chevron-left,\r\n            .fa-chevron-right {\r\n                height: 0;\r\n                position: absolute;\r\n                left: 100%;\r\n                &:before {\r\n                    padding: 0;\r\n                }\r\n            }\r\n            &-disabled {\r\n                opacity: 0.2;\r\n                &:hover {\r\n                    opacity: 0.2;\r\n                }\r\n            }\r\n            .fa-chevron-left {\r\n                order: 2;\r\n                transform: rotate(90deg);\r\n            }\r\n            .fa-chevron-right {\r\n                order: 2;\r\n                transform: rotate(90deg);\r\n                top: 20px;\r\n            }\r\n        }\r\n    }\r\n}",".portfolio-wrapper {\r\n    width: 100%;\r\n}\r\n\r\n.portfolio {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    max-width: 1140px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    padding: 106px 15px 100px;\r\n    @include media (\"<tablet\") {\r\n        padding: 25px 15px;\r\n        &-title {\r\n            margin: 0;\r\n        }\r\n    }\r\n    &-title {\r\n        font: bold 25px \"Arvo\";\r\n        color: #3e3e3e;\r\n        margin: 0 0 55px;\r\n        @include media (\"<tablet\") {\r\n            margin: 0 0 25px;\r\n            text-align: center;\r\n        }\r\n        @include media (\"<phone\") {\r\n            margin: 0 15px 25px;\r\n            text-align: center;\r\n        }\r\n    }\r\n    &-list {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        justify-content: space-evenly;\r\n        margin: 0 0 68px;\r\n        width: 100%;\r\n        @include media (\"<tablet\") {\r\n            margin: 0;\r\n        }\r\n        .column {\r\n            display: flex;\r\n            flex-direction: column;\r\n            &:nth-child(2) {\r\n                padding: 0 15px;\r\n                @include media (\"<phone\") {\r\n                    padding: 0;\r\n                }\r\n            }\r\n        }\r\n        &-item-small,\r\n        &-item-big {\r\n            position: relative;\r\n            margin: 0 0 25px;\r\n            opacity: 1;\r\n            &:after {\r\n                @include animate(opacity);\r\n            }\r\n            &:hover {\r\n                &:after {\r\n                    position: absolute;\r\n                    height: 100%;\r\n                    width: 100%;\r\n                    content: '';\r\n                    top: 0;\r\n                    left: 0;\r\n                    background-color: #3e3e3e;\r\n                    opacity: 0.6;\r\n                    z-index: 0;\r\n                }\r\n                .buttons-holder,\r\n                .text-holder {\r\n                    display: block;\r\n                }\r\n            }\r\n            img {\r\n                box-shadow: 0px 0px 20px 0px #cecece;\r\n            }\r\n            .buttons-holder,\r\n            .text-holder {\r\n                position: absolute;\r\n                display: none;\r\n                z-index: 2;\r\n            }\r\n            .buttons-holder {\r\n                .fas {\r\n                    margin: 0 0 0 20px;\r\n                    color: #e9e9e9;\r\n                    border-radius: 45px;\r\n                    &:hover {\r\n                        opacity: 0.8;\r\n                    }\r\n                }\r\n            }\r\n            .text-holder {\r\n                width: 100%;\r\n                background-color: #d3d3d3;\r\n                bottom: 0;\r\n                h2 {\r\n                    font: bold 18px \"Arvo\";\r\n                    color: #3e3e3e;\r\n                }\r\n                h4 {\r\n                    font: italic 15px \"Roboto\";\r\n                    color: #3e3e3e;\r\n                }\r\n            }\r\n        }\r\n        &-item-big {\r\n            .buttons-holder {\r\n                top: 190px;\r\n                left: 120px;\r\n            }\r\n            .text-holder {\r\n                padding: 30px 80px 30px 25px;\r\n            }\r\n        }\r\n        &-item-small {\r\n            .buttons-holder {\r\n                top: 50px;\r\n                left: 120px;\r\n            }\r\n            .text-holder {\r\n                padding: 15px 80px 15px 25px;\r\n            }\r\n        }\r\n    }\r\n    &-button {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 160px;\r\n        height: 49px;\r\n        font: 18px \"Arvo\";\r\n        color: #dadada;\r\n        border-radius: 10px;\r\n        background-color: #3e3e3e;\r\n        text-transform: capitalize;\r\n        @include animate(opacity);\r\n        &:hover {\r\n            opacity: 0.8;\r\n        }\r\n    }\r\n}\r\n\r\n;",".footer-wrapper {\r\n    width: 100%;\r\n    margin-top: auto;\r\n    background-color: #d3d3d3;\r\n    .copyright {\r\n        padding-top: 15px;\r\n        height: 45px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 100%;\r\n        background-color: #3e3e3e;\r\n        color: #d3d3d3;\r\n        font-weight: bold;\r\n        letter-spacing: 1px;\r\n        a {\r\n            text-decoration: none;\r\n            color: #d3d3d3;\r\n            @include animate(opacity);\r\n            &:hover {\r\n                opacity: 0.6;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.footer {\r\n    font: 15px \"Roboto\";\r\n    color: #3e3e3e;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    max-width: 1140px;\r\n    padding: 0 15px;\r\n    .footer-main {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        margin: 100px 0 94px 0;\r\n        @include media (\"<phone\") {\r\n            flex-direction: column;\r\n            margin: 0;\r\n            padding-bottom: 25px;\r\n            padding-top: 25px;\r\n        }\r\n        a {\r\n            margin-top: 10px;\r\n            @include animate(color);\r\n            &:hover {\r\n                color: #000;\r\n            }\r\n        }\r\n        &-column {\r\n            max-width: 290px;\r\n            &-title {\r\n                font: bold 20px Arvo;\r\n                margin-bottom: 35px;\r\n            }\r\n            &-links {\r\n                display: flex;\r\n                justify-content: space-around;\r\n                flex-direction: column;\r\n                a {\r\n                    color: #3e3e3e;\r\n                }\r\n                .blog-link-title {\r\n                    font-weight: bold;\r\n                }\r\n            }\r\n            form {\r\n                display: flex;\r\n                flex-direction: row;\r\n                flex-wrap: nowrap;\r\n                margin-top: 45px;\r\n                input {\r\n                    width: 160px;\r\n                    background-color: #eceaea;\r\n                    border-radius: 10px 0 0 10px;\r\n                    border: none;\r\n                    outline: none;\r\n                    @media (max-width: 599px) {\r\n                        width: 100%;\r\n                    }\r\n                }\r\n                button {\r\n                    width: 95px;\r\n                    padding: 12px 15px 12px 15px;\r\n                    background-color: #3e3e3e;\r\n                    border-radius: 0 10px 10px 0;\r\n                    border: none;\r\n                    color: #d3d3d3;\r\n                    font-style: \"Arvo\";\r\n                    outline: none;\r\n                    @include animate(opacity);\r\n                    &:hover {\r\n                        opacity: 0.8;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"]}